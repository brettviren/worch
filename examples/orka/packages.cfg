[package cmake] 
version = 2.8.11
features = tarball prepare makemake
source_url = http://www.cmake.org/files/v{version_2digit}/{source_archive_file}
unpacked_target = bootstrap
prepare_cmd = ../../{source_dir}/{source_unpacked}/bootstrap
prepare_cmd_options = --prefix={install_dir}
prepare_target = cmake_install.cmake
build_target = bin/cmake
install_target = bin/cmake
export_PATH = prepend:{install_dir}/bin

[package gccxml]
version = 20130920
features = vcs cmake makemake
source_url = git://github.com/gccxml/gccxml.git
vcs_tag = b040a46352e4d5c11a0304e4fcb6f7842008942a
vcs_flavor = git
unpacked_target = README.rst
build_target = bin/gccxml
install_target = bin/gccxml


[package pythia]
version = 6
features = tarball pythiainst
source_unpacked = {package}{version}
source_archive_file = {source_unpacked}.tar.gz
source_url = ftp://root.cern.ch/root/{source_archive_file}
build_target = libPythia6.so
install_target = lib/libPythia6.so

[package python]
version = 2.7.5
source_unpacked = Python-{version}
source_archive_file = {source_unpacked}.tgz
source_url = http://www.python.org/ftp/{package}/{version}/{source_archive_file}
prepare_cmd_options = --prefix={install_dir} --enable-shared
build_target = python
install_target = bin/python
export_PATH = prepend:{install_dir}/bin
export_PYTHONHOME = set:{install_dir}
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package ipython]
version = 1.1.0
features = tarball pypackage
install_dir = {python_install_dir}
environment = package:python
depends = unpack:python_install
source_url = http://archive.ipython.org/release/{version}/{source_archive_file}
unpacked_target = setup.py
build_target = build/lib/IPython/__init__.py
install_target = bin/ipython

[package xerces-c]
version = 3.1.1
source_url = http://mirror.metrocast.net/apache//xerces/c/3/sources/{source_archive_file}
build_target = src/libxerces-c.la
install_target = lib/libxerces-c.la
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package geant]
version = 4.9.5.p02
features = tarball cmake makemake
source_archive_file = {source_unpacked}.tar.gz
source_url = http://geant4.cern.ch/support/source/{source_archive_file}
source_unpacked = {package}{version}
# fixme: hardcode compiler name
depends = prepare:xerces-c_install
prepare_cmd_options = -DG4_ENABLE_CXX11=ON -DBUILD_STATIC_LIBS=ON -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_GDML=ON -DXERCESC_ROOT_DIR:STRING={xerces-c_install_dir} 
build_cmd = make
build_cmd_options = -j10
build_target = outputs/library/{kernelname}-g++/libG4track.so
install_target = include/Geant4/G4Track.hh
export_LD_LIBRARY_PATH = prepend:{install_dir}/{libbits}
export_PATH = prepend:{install_dir}/bin

[package root]
version = 5.34.03
environment = group:buildtools, package:python, package:gccxml, package:pythia
features = tarball cmake makemake
depends = prepare:python_install, prepare:pythia_install, prepare:gccxml_install
# fixme: need to depend on libxml2, pythia, mysql, postgresql when fixing the enables below
source_url = ftp://root.cern.ch/{package}/{source_archive_file}
source_archive_file = {package}_v{version}.source.tar.gz
# fixme: ROOT does not unpack into a version-specific directory.  this
# WILL cause problems if the sampe build area is shared by multiple
# build types.
source_unpacked = {package}
unpacked_target = CMakeLists.txt
# fixme: hardcodes python2.7.
# need to explicitly set python locations else ROOT picks up other system pythons
prepare_cmd_options = -Dminuit2=ON -Dpython=ON -DPYTHON_LIBRARY={python_install_dir}/lib/libpython2.7.so -DPYTHON_INCLUDE_DIR={python_install_dir}/include/python2.7 -DPYTHIA6_LIBRARY={pythia_install_dir}/lib/libPythia6.so -DGCCXML_EXECUTABLE={gccxml_install_dir}/bin/gccxml
#this isn't in Lynn's "nu" group, but why not have it?
# --enable-roofit \
build_cmd = make
build_cmd_options = -j10
build_target = bin/root.exe
install_target = bin/root.exe
buildenv_VERBOSE = set:1
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_PATH = prepend:{install_dir}/bin
export_ROOTSYS = set:{install_dir}
export_PYTHONPATH = prepend:{install_dir}/lib
export_CMAKE_MODULE_PATH = prepend:{install_dir}/etc/cmake


[package geant3vmc]
version = 1.14
environment = package:root
depends = prepare:root_install
features = tarball, prepare, makemake
# uhg!
source_unpacked = geant3
source_archive_file = geant321+_vmc.{version}.tar.gz
source_url = ftp://root.cern.ch/root/vmc/{source_archive_file}
prepare_cmd = cp -a ../../{source_dir}/{source_unpacked}/* .
prepare_target = Makefile
build_cmd = make && touch build.done
build_target = build.done
install_cmd = cp 
install_cmd_options = -a lib/ TGeant3/ {install_dir}/ 
install_target = TGeant3/TGeant3.h

