[package modules]
version = 3.2.10
features = tarball, autoconf, makemake
source_url = http://prdownloads.sourceforge.net/{package}/{source_archive_file}
unpacked_target = configure
prepare_cmd_options = --without-x
build_target = modulecmd
install_target = Modules/{version}/bin/modulecmd
# Modules will self-manage version
install_dir = {PREFIX}

[package cmake] 
version = 2.8.11
features = tarball, prepare, makemake, modulesfile
source_url = http://www.cmake.org/files/v{version_2digit}/{source_archive_file}
unpacked_target = bootstrap
prepare_cmd = ../../{source_dir}/{source_unpacked}/bootstrap
prepare_cmd_options = --prefix={install_dir}
prepare_target = cmake_install.cmake
build_target = bin/cmake
install_target = bin/cmake
export_PATH = prepend:{install_dir}/bin

[package gccxml]
version = 20130920
features = vcs, cmake, makemake, modulesfile
environment = group:buildtools
depends = unpack:cmake_install
source_url = git://github.com/gccxml/gccxml.git
vcs_tag = b040a46352e4d5c11a0304e4fcb6f7842008942a
vcs_flavor = git
unpacked_target = README.rst
build_target = bin/gccxml
install_target = bin/gccxml
export_PATH = prepend:{install_dir}/bin


[package pythia]
version = 6
features = tarball, pythiainst, modulesfile
tools = worch.extras.pythia6
source_unpacked = {package}{version}
source_archive_file = {source_unpacked}.tar.gz
source_url = ftp://root.cern.ch/root/{source_archive_file}
build_target = libPythia6.so
install_target = lib/libPythia6.so

[package python]
version = 2.7.5
source_unpacked = Python-{version}
source_archive_file = {source_unpacked}.tgz
source_url = http://www.python.org/ftp/{package}/{version}/{source_archive_file}
unpacked_target = README
prepare_cmd_options = --prefix={install_dir} --enable-shared
build_target = python
install_target = bin/python
export_PATH = prepend:{install_dir}/bin
export_PYTHONHOME = set:{install_dir}
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package ipython]
version = 1.1.0
features = tarball, pypackage, modulesfile
install_dir = {python_install_dir}
environment = package:python
depends = unpack:python_install
source_url = http://archive.ipython.org/release/{version}/{source_archive_file}
unpacked_target = setup.py
build_target = build/lib/IPython/__init__.py
install_target = bin/ipython

[package xercesc]
version = 3.1.1
source_url = http://mirror.metrocast.net/apache//xerces/c/3/sources/{source_archive_file}
unpacked_target = README
build_target = src/libxerces-c.la
install_target = lib/libxerces-c.la
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package geant]
version = 4.9.6.p01
features = tarball, cmake, makemake, modulesfile
source_archive_file = {source_unpacked}.tar.gz
source_url = http://geant4.cern.ch/support/source/{source_archive_file}
source_unpacked = {package}{version}
unpacked_target = CMakeLists.txt
depends = prepare:xercesc_install
# Must include g3tog4 to make geant4vmc happy
prepare_cmd_options = -DGEANT4_USE_G3TOG4=ON -DGEANT4_INSTALL_DATA=ON -DG4_ENABLE_CXX11=ON -DBUILD_STATIC_LIBS=ON -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_GDML=ON -DXERCESC_ROOT_DIR:STRING={xercesc_install_dir} 
build_cmd = make
build_cmd_options = -j4
build_target = outputs/library/{kernelname}-g++/libG4track.{soext}
install_target = include/Geant4/G4Track.hh
export_LD_LIBRARY_PATH = prepend:{install_dir}/{libbits}
export_PATH = prepend:{install_dir}/bin
# NOTE: hard coded version string:
data_dir = {install_dir}/share/Geant4-9.6.1/data
# NOTE: must match versions here to the Geant4 version installed
export_G4NEUTRONHPDATA={data_dir}/G4NDL4.2
export_G4LEDATA={data_dir}/G4EMLOW6.32
export_G4LEVELGAMMADATA={data_dir}/PhotonEvaporation2.3
export_G4RADIOACTIVEDATA={data_dir}/RadioactiveDecay3.6
export_G4NEUTRONXSDATA={data_dir}/G4NEUTRONXS1.2
export_G4PIIDATA={data_dir}/G4PII1.3
export_G4REALSURFACEDATA={data_dir}/RealSurface1.0
export_G4SAIDXSDATA={data_dir}/G4SAIDDATA1.1


[package root]
version = 5.34.05
environment = group:buildtools, package:python, package:gccxml, package:pythia
features = tarball, cmake, makemake, modulesfile
source_url = ftp://root.cern.ch/{package}/{source_archive_file}
depends = prepare:python_install, prepare:pythia_install, prepare:gccxml_install
source_archive_file = {package}_v{version}.source.tar.gz
# fixme: ROOT does not unpack into a version-specific directory.  this
# WILL cause problems if the sampe build area is shared by multiple
# build types.
source_unpacked = {package}
unpacked_target = CMakeLists.txt
# fixme: hardcodes python2.7.
# need to explicitly set python locations else ROOT picks up other system pythons
prepare_cmd_options = -Dxrootd=OFF -Dminuit2=ON -Dpython=ON -DPYTHON_LIBRARY={python_install_dir}/lib/libpython2.7.{soext} -DPYTHON_INCLUDE_DIR={python_install_dir}/include/python2.7 -DPYTHIA6_LIBRARY={pythia_install_dir}/lib/libPythia6.so -DGCCXML_EXECUTABLE={gccxml_install_dir}/bin/gccxml
build_cmd = make
build_cmd_options = 
build_target = bin/root.exe
install_target = bin/root.exe
buildenv_VERBOSE = set:1
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_PATH = prepend:{install_dir}/bin
export_ROOTSYS = set:{install_dir}
export_PYTHONPATH = prepend:{install_dir}/lib
export_CMAKE_MODULE_PATH = prepend:{install_dir}/etc/cmake


[package vgm]
version = 3.06
features = vcs, cmake, makemake, modulesfile
environment = group:buildtools, package:root, package:geant
depends = prepare:geant_install, prepare:root_install
vcs_flavor = svn
source_url = svn://svn.code.sf.net/p/{package}/code/tags/v{version_dashed}/{package}
source_unpacked = {package}-{version}
unpacked_target = CMakeLists.txt
build_target = packages/RootGM/libRootGM.{soext}
install_target = lib/libRootGM.{soext}
export_VGM_INSTALL = {install_dir}
export_USE_VGM = 1
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package geant4vmc]
version = 2.14a
features = tarball, prepare, makemake, modulesfile
environment = group:buildtools, package:root, package:geant, package:vgm
depends = prepare:root_install, prepare:geant_install, prepare:vgm_install
source_unpacked = geant4_vmc
unpacked_target = README
source_archive_file = {source_unpacked}.{version}.tar.gz
source_url = ftp://root.cern.ch/root/vmc/{source_archive_file}
buildenv_USE_VGM = 1
# this is messed up, apparently expects this to point at VGM source:
buildenv_VGM_INSTALL = {out}/{vgm_source_dir}/{vgm_source_unpacked}
prepare_cmd = cp
prepare_cmd_options = -r ../../{source_dir}/{source_unpacked}/* .
prepare_target = Makefile
build_target = lib/tgt_{root_config_arch}/libgeant4vmc.so
# the install makes files unwritable so if we reinstall it will fail
# so make sure things are writable
install_cmd = chmod -R +w {install_dir} && cp 
install_cmd_options = -r examples lib include {install_dir}
install_target = include/g4root
# used by ilcroot cmake files
export_G4VMC = {install_dir}
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib/tgt_{root_config_arch}

[package geant3vmc]
version = 1.15a
environment = package:root
depends = prepare:root_install
features = tarball, prepare, makemake, modulesfile
# uhg!
source_unpacked = geant3
unpacked_target = README
source_archive_file = geant321+_vmc.{version}.tar.gz
source_url = ftp://root.cern.ch/root/vmc/{source_archive_file}
prepare_cmd = cp -r ../../{source_dir}/{source_unpacked}/* .
prepare_target = Makefile
build_cmd = make && touch build.done
build_target = build.done
install_cmd = cp 
install_cmd_options = -r lib TGeant3 {install_dir}/ && chmod -R +w {install_dir}
install_target = TGeant3/TGeant3.h
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib/tgt_{root_config_arch}
# used by ILCRoot cmake files
export_GEANT3SYS = {install_dir}
