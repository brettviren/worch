[start]
groups = sourcebundles, buildtools, preart, art
tools = worch.extras.fnal
fnal_products_dir = products
fnal_products_path = {PREFIX}/{fnal_products_dir}
fnal_experiment_qual = nu
fnal_extra_qual = prof
fnal_base_qual = e4
fnal_compiler_qual = gcc48
fnal_package_name = {package}
fnal_upsprod_subdir = {fnal_package_name}/v{version_underscore}
buildenv_PRODUCTS = {fnal_products_path}

[group sourcebundles]
packages = upsupd, artext, artsuite, nuext
features = fnalsrcbundle

[package upsupd]
version = 5.0.1
fnal_name = ups-upd
fnal_srcbundle_url = http://oink.fnal.gov/distro/relocatable-ups/{fnal_srcbundle_file}
fnal_srcbundle_target = setup 

[package artext]
version = 1.00.03
fnal_name = art_externals
fnal_srcbundle_target = {fnal_name}/v{version_underscore}/do_this_first.sh

[package artsuite]
version = 1.08.09
fnal_name = art_suite
fnal_srcbundle_target = {fnal_name}/v{version_underscore}/buildArt.sh

[package nuext]
version = 1.00.03
fnal_name = nu_extras
# fixme: sigh, hard-coded.
fnal_srcbundle_target = root/v5_34_09b/ups/root.table


[group buildtools]
packages = ups, cmake, gcc
features = fnalbuilder

[package ups]
version = 5.0.1
fnal_builder_script = ./buildUps.sh
fnal_builder_target = {fnal_package_name}/v{version_underscore}.version/{ups_flavor}_
# normally we automatically prepend sourcing of the UPS setup script
# but with ups itself that will fail since it relies on the ups
# binary.
fnal_builder_prefix = 
fnal_builder_script_options =

[package cmake]
version = 2.8.8
depends = fnalbuilder:ups_fnalbuilder
fnal_builder_target = {fnal_upsprod_subdir}/{ups_flavor}/bin/cmake
fnal_builder_script_options = {fnal_products_path}

[package gcc]
version = 4.8.1
depends = fnalbuilder:ups_fnalbuilder
fnal_builder_target = {fnal_upsprod_subdir}/{ups_flavor}/bin/gcc
fnal_builder_script_options = {fnal_products_path}

[group preart]
packages = boost,fftw,sqlite,python,cppunit,libsigcpp,gccxml,getopt,clhep,libxml2,tbb,xrootd,xercesc,cry,lhapdf,pythia,log4cpp,postgresql,geant4,mysqlclient,root
#,root
# nu_extras
# art
features = fnalbuilder
# for each package this must match what the build script tacks on to the flavor
fnal_qual_underscore = {fnal_base_qual}_{fnal_extra_qual}
fnal_builder_target = {fnal_upsprod_subdir}.version/{ups_flavor}_{fnal_qual_underscore}
fnal_builder_script_options = {fnal_products_path} {fnal_base_qual} {fnal_extra_qual}

[package boost]
version = 1.53.0

[package fftw]
version = 3.3.3
fnal_qual_underscore = {fnal_extra_qual}
fnal_builder_script_options = {fnal_products_path} {fnal_extra_qual}

[package sqlite]
version = 3.08.00.02
fnal_qual_underscore =
fnal_builder_script_options = {fnal_products_path}

[package python]
version = 2.7.5b
depends = fnalbuilder:sqlite_fnalbuilder
fnal_qual_underscore =
fnal_builder_script_options = {fnal_products_path}

[package cppunit]
version = 1.12.1

[package libsigcpp]
version = 2.2.11

[package gccxml]
version = 0.9.20130621
fnal_qual_underscore =
fnal_builder_script_options = {fnal_products_path}

# only built on mac?
[package getopt]
version = 1.1.5
fnal_qual_underscore =
fnal_builder_script_options = {fnal_products_path}

[package clhep]
version = 2.1.3.1

[package libxml2]
version = 2.9.1
fnal_qual_underscore = {fnal_extra_qual}
fnal_builder_script_options = {fnal_products_path} {fnal_extra_qual}

[package tbb]
version = 4.1.3

[package xrootd]
version = 3.3.3

[package xercesc]
version = 3.1.1
fnal_package_name = xerces_c


[package cry]
version = 1.7

[package lhapdf]
version = 5.9.1

[package pythia]
version = 6.4.28
fnal_qual_underscore = {fnal_compiler_qual}_{fnal_extra_qual}
fnal_builder_script_options = {fnal_products_path} {fnal_compiler_qual} {fnal_extra_qual}

[package log4cpp]
version = 1.1 

[package postgresql]
version = 9.1.5a
depends = fnalbuilder:python_fnalbuilder
fnal_qual_underscore = 
fnal_builder_script_options = {fnal_products_path}

[package geant4]
version = 4.9.6.p02
features = fnalbuilder, command
depends = fnalbuilder:clhep_fnalbuilder, fnalbuilder:xercesc_fnalbuilder
# fixme: temporary manual running of this script until the bug is fixed
command_dir = {fnal_products_path}/{fnal_upsprod_subdir}
command_cmd = ./scripts/getG4DataSets.sh

[package mysqlclient]
version = 5.5.27
fnal_package_name = mysql_client
fnal_qual_underscore = {fnal_base_qual}
fnal_builder_script_options = {fnal_products_path} {fnal_base_qual}

[package root]
version = 5.34.09b
fnal_qual_underscore = {fnal_base_qual}_{fnal_experiment_qual}_{fnal_extra_qual}
fnal_builder_script_options = {fnal_products_path} {fnal_experiment_qual}:{fnal_base_qual} {fnal_extra_qual}
depends = fnalbuilder:fftw_fnalbuilder, fnalbuilder:libxml2_fnalbuilder, fnalbuilder:xrootd_fnalbuilder, fnalbuilder:postgresql_fnalbuilder, fnalbuilder:mysqlclient_fnalbuilder, fnalbuilder:python_fnalbuilder, fnalbuilder:geant4_fnalbuilder, fnalbuilder:pythia_fnalbuilder, 

[package genie]
version = 2.8.0b
depends = fnalbuilder:root_fnalbuilder, fnalbuilder:log4cpp_fnalbuilder, fnalbuilder:lhapdf_fnalbuilder


[group art]
packages = cetlib, art
features = fnalbuilder
fnal_qual_underscore = {fnal_base_qual}_{fnal_extra_qual}
fnal_builder_target = {fnal_upsprod_subdir}.version/{ups_flavor}_{fnal_qual_underscore}
fnal_builder_script_options = {fnal_products_path} {fnal_base_qual} {fnal_extra_qual}

[package cetlib]
version = 1.03.25
fnal_builder_dir = art_suite/v{art_version_underscore}
fnal_builder_script = ./buildCET.sh



[package art]
version = 1.08.09
depends = fnalbuilder:cetlib_fnalbuilder
fnal_builder_dir = art_suite/v{version_underscore}
fnal_builder_script = ./buildArt.sh
fnal_qual_underscore = {fnal_experiment_qual}_{fnal_base_qual}_{fnal_extra_qual}
fnal_builder_script_options = {fnal_products_path} {fnal_experiment_qual}:{fnal_base_qual} {fnal_extra_qual}



[keytype]
groups = group
packages = package

