[package gccxml]
version = 20130920
features = vcs, cmake, makemake, modulesfile
#source_url = git://github.com/gccxml/gccxml.git
source_url = https://github.com/gccxml/gccxml.git
vcs_tag = b040a46352e4d5c11a0304e4fcb6f7842008942a
vcs_flavor = git
unpacked_target = README.rst
build_target = bin/gccxml
install_target = bin/gccxml
## do not need this as gccxml is located explicitly
#export_PATH = prepend:{install_dir}/bin
## end-user will likely need it
userenv_PATH = prepend:{install_dir}/bin

[package python]
version = 2.7.9
features = tarball, autoconf, makemake, modulesfile
source_unpacked = Python-{version}
source_archive_file = {source_unpacked}.tgz
source_url = http://www.python.org/ftp/{package}/{version}/{source_archive_file}
unpacked_target = README
prepare_cmd_options = --prefix={install_dir} --enable-shared
build_target = python
install_target = bin/python

export_PATH = prepend:{install_dir}/bin
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
# set this so we do not include any user-specific .local installation during the build
export_PYTHONNOUSERSITE=yes

userenv_PATH = {export_PATH}
userenv_LD_LIBRARY_PATH = {export_LD_LIBRARY_PATH}

# in general it is good to set this for users too.  On Debian systems
# things in dist-packages will polute the sys.path.  Setting it will
# limit run time to only include what Python we explicitly provide
# which is safer.  Experts may unset it and deal with the
# consequences.
userenv_PYTHONNOUSERSITE=yes


[package ipython]
version = 2.3.1
features = tarball, pypackage, modulesfile
install_dir = {python_install_dir}
environment = package:python
depends = unpack:python_install
source_url = http://archive.ipython.org/release/{version}/{source_archive_file}
unpacked_target = setup.py
build_target = build/lib/IPython/__init__.py
install_target = bin/ipython
# no environment needed as ipython installs into packae python's area

[package root]
version = 5.34.14
environment = group:buildtools, package:cmake, package:python, package:gccxml
features = tarball, cmake, makemake, modulesfile
source_url = ftp://root.cern.ch/{package}/{source_archive_file}
depends = prepare:python_install, prepare:gccxml_install
source_archive_file = {package}_v{version}.source.tar.gz
source_unpacked = {package}
unpacked_target = CMakeLists.txt
prepare_cmd_options = -Dpythia6=OFF -Dminuit2=ON -Dpython=ON -DPYTHON_LIBRARY={python_install_dir}/lib/libpython2.7.so -DPYTHON_INCLUDE_DIR={python_install_dir}/include/python2.7 -DGCCXML_EXECUTABLE={gccxml_install_dir}/bin/gccxml
build_cmd = make
# warning: root doesn't always "like" being built with "make -jN"
build_cmd_options = 
build_target = bin/root.exe
install_target = bin/root.exe
buildenv_VERBOSE = set:1
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_PATH = prepend:{install_dir}/bin
export_ROOTSYS = set:{install_dir}
export_CMAKE_MODULE_PATH = prepend:{install_dir}/etc/cmake
# not needed during build
# export_PYTHONPATH = prepend:{install_dir}/lib

userenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib
userenv_PATH = prepend:{install_dir}/bin
userenv_ROOTSYS = set:{install_dir}
userenv_PYTHONPATH = prepend:{install_dir}/lib
