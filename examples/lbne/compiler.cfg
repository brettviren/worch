# this group holds any packages needed to build other packages besides GCC.

[group compiler]
packages = gmp, ppl, mpfr, mpc, isl, cloog, gcc
features = tarball, autoconf, makemake
build_target = bin/{package}
install_target = bin/{package}

# Share the same compiler regardless of any tags
tags =

# Want to put all GCC packages into one install_dir
install_dir = {PREFIX}/{ups_prod_subdir}
# Also have to inject some UPS stuff here too
ups_version_string = v{gcc_version}
ups_prod_subdir = gcc/{ups_version_string}/{ups_flavor}_{ups_qualifiers}



# buildenv_COMPILER_PATH = set:{install_dir}/bin
# buildenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib

# buildenv_LIBRARY_PATH = set:/usr/lib/{gcc_multiarch}
# buildenv_C_INCLUDE_PATH = set:/usr/include/{gcc_multiarch}
# buildenv_CPLUS_INCLUDE_PATH = set:/usr/include/{gcc_multiarch}
# buildenv_CPATH = set:/usr/include/{gcc_multiarch}
[package gmp]
version = 5.0.5
source_url = ftp://ftp.gmplib.org/pub/{source_unpacked}/{source_archive_file}
source_archive_ext = tar.bz2
prepare_cmd_options = --prefix={install_dir} --enable-cxx
build_target = libgmp.la
install_target = lib/libgmp.la
buildenv_CPPFLAGS = -fexceptions

[package ppl]
version = 0.12.1
source_url = http://bugseng.com/products/ppl/download/ftp/releases/{version}/{source_archive_file}
source_archive_ext = tar.bz2
prepare_cmd_options = --prefix={install_dir} --without-java --with-gmp={gmp_install_dir}
depends = prepare:gmp_install
build_target = interfaces/C/libppl_c.la
install_target = lib/libppl_c.la
buildenv_CXXFLAGS = set:-fno-access-control
buildenv_CPPFLAGS = -I{install_dir}/include
buildenv_LDFLAGS = -L{install_dir}/lib

[package mpfr]
version = 3.1.2
source_url = http://www.mpfr.org/mpfr-current/{source_archive_file}
source_archive_ext = tar.bz2
prepare_cmd_options = --prefix={install_dir} --with-gmp={gmp_install_dir}
depends = prepare:gmp_install
build_target = src/libmpfr.la
install_target = lib/libmpfr.la

[package mpc]
version = 0.9
source_url = http://www.multiprecision.org/mpc/download/{source_archive_file}
prepare_cmd_options = --prefix={install_dir} --with-gmp={gmp_install_dir} --with-mpfr={mpfr_install_dir}
depends = prepare:gmp_install, prepare:mpfr_install
build_target = src/libmpc.la
install_target = lib/libmpc.la

[package isl]
version = 0.11.1
source_url = ftp://gcc.gnu.org/pub/gcc/infrastructure/{source_archive_file}
source_archive_ext = tar.bz2
prepare_cmd_options = --prefix={install_dir} --with-gmp-prefix={gmp_install_dir}
depends = prepare:gmp_install
build_target = libisl.la
install_target = lib/libisl.la

[package cloog]
version = 0.18.0
source_url = ftp://gcc.gnu.org/pub/gcc/infrastructure/{source_archive_file}
prepare_cmd_options = --prefix={install_dir} --with-gmp-prefix={gmp_install_dir} --with-ppl={ppl_install_dir} 
depends = prepare:gmp_install, prepare:ppl_install, prepare:isl_install
build_target = cloog
install_target = bin/cloog

[package gcc]
version = {gcc_version}
features = tarball, autoconf, makemake, upspkg
source_url = http://www.netgull.com/gcc/releases/{source_unpacked}/{source_archive_file}
source_archive_ext = tar.bz2
prepare_cmd_options = --prefix={install_dir} --with-gmp={gmp_install_dir} --with-mpc={mpc_install_dir} --with-mpfr={mpfr_install_dir} --with-ppl={ppl_install_dir} --with-cloog={cloog_install_dir} --enable-cloog-backend=isl --with-gnu-as --with-gnu-ld --disable-libgcj --enable-threads=posix --enable-languages=c,c++,objc,fortran
depends = prepare:gmp_install, prepare:mpc_install, prepare:mpfr_install, prepare:ppl_install, prepare:isl_install, prepare:cloog_install
build_cmd = env && make
build_cmd_options = -j{NCPUS} bootstrap
build_target = gcc/xgcc
buildenv_CXXFLAGS = set:-fPIC
buildenv_CFLAGS = set:-fPIC
buildenv_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_PATH = prepend:{install_dir}/bin
# allow both lib/libgmp.so and lib64/libstc++.so to be picked up
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib:{install_dir}/lib64
