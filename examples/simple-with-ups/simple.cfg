# Simple example orch.cfg file for installing a suite of software
# packages.  An artificial dependency is setup so that hello "depends"
# on "bc".

# Note: additional interpolation is done by the waf scripts so some
# variable may appear to be undefined but will be satisfied later.
[start]
groups = buildtools, gnuprograms, needups
includes = buildtools.cfg, gnuprograms.cfg
group = gnuprograms
tags = debug
download_dir = downloads
source_dir = sources
build_dir = builds/{package}-{version}-{tagsdashed}
install_dir = {ups_products}/{ups_prod_subdir}
ups_products = {PREFIX}
ups_version_string = v{version_underscore}
# locates the UPS dir
ups_prod_subdir = {package}/{ups_version_string}
ups_qualifiers = 

# one could set this explicitly but here is the default:
# ups_products = {PREFIX}/share/ups

srcpkg_ext = tar.gz
source_unpacked = {package}-{version}
source_package = {source_unpacked}.{srcpkg_ext}

# emulate a package needing UPS.  Note, this is in a wholly different
# group so that we can assure that UPS and the UPS'ified packages are
# fully installed.
[group needups]
packages = fart, lartsoft

[package fart]
version = 0.0
features = dumpenv
buildenv_upssetup = shell:source {ups_products}/setup && setup hello
dumpenv_cmd =  echo "hello is at $HELLO_DIR" && hello

[package lartsoft]
version = 0.0
features = dumpenv
environment = group:buildtools, package:bc
buildenv_upssetup = shell:source {ups_products}/setup && setup hello
dumpenv_cmd =  echo "hello is at $HELLO_DIR, bc is at $BC_DIR" && bc -v && hello

[keytype]
groups = group
packages = package
