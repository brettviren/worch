[group externals]
#packages = libsigcpp, libxml2, python, sqlite, tbb, root, geant, xerces-c, cry, genie, lhapdf, mysql, postgresql, pythia, log4cpp
packages = libsigcpp, libxml2, python, sqlite, tbb, xrootd, root
environment = group:buildtools, group:compiler

[package libsigcpp]
version = 2.2.10
source_unpacked = libsigc++-{version}
source_package = {source_unpacked}.tar.bz2
source_url = http://ftp.gnome.org/pub/GNOME/sources/libsigc++/{version_2digit}/{source_package}
build_cmd = /bin/env && make
build_target = sigc++/signal.lo
install_target = lib/pkgconfig


[package libxml2]
version = 2.8.0
source_url = ftp://xmlsoft.org/{package}/{source_package}
build_target = libxml2.la
install_target = lib/libxml2.a

[package python]
version = 2.7.3
source_unpacked = Python-{version}
source_package = {source_unpacked}.tgz
source_url = http://www.python.org/ftp/{package}/{version}/{source_package}
prepare_script_options = --prefix={install_dir} --enable-shared
build_target = python
install_target = bin/python
export_PATH = prepend:{install_dir}/bin
export_PYTHONHOME = set:{install_dir}
export LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package sqlite]
version = 3.7.17
source_url = http://www.sqlite.org/2013/{package}-autoconf-3071700.tar.gz
source_unpacked = {package}-autoconf-3071700
build_target = sqlite3
install_target = bin/sqlite3

# tbb is a way messed up package. a tbb/wscript override is used
[package tbb]
features = tarball dumpenv tbbbuild
version = 4.1.3
# inconsistently named tarball
source_unpacked = tbb41_20130314oss
srcpkg_ext = tgz
# gratuitious wart _src
source_package = {source_unpacked}_src.{srcpkg_ext}
# TBB web site makes it impossible to directly download, screw 'em and cache ourselves
#source_url = http://threadingbuildingblocks.org/sites/default/files/software_releases/source/{source_package}
source_url = http://www.phy.bnl.gov/~bviren/lbne/{source_package}
# gotta do in-source build, trick tarball into unpacking in the build area
source_dir = builds
unpacked_target = Makefile
# Non standard location to build - must match source unpacked
build_dir = builds/{source_unpacked}
# the rest is handled by tbbbuild feature

[package xrootd]
features = tarball dumpenv cmake makemake
depends = prepare:cmake_install
version = 3.3.3
source_url = http://xrootd.slac.stanford.edu/download/v{version}/{source_package}
source_url_checksum = md5:8c2a2d66a684a8f4395c02ae249f5706
source_package = {source_unpacked}.tar.gz
unpacked_target = CMakeLists.txt
#patch_url = file://$PWD/../patches/{package}-{version}.patch
#patch_cmd_options = -i -p0
#patch_target = {source_unpacked}/configure
prepare_cmd = cmake
prepare_cmd_options = ../../{source_dir}/{source_unpacked} -DCMAKE_INSTALL_PREFIX={install_dir}
prepare_target = CMakeCache.txt
build_target = src/xrdcp
install_target = bin/xrdcp
export_XRDSYS = {install_dir}

[package root]
environment = group:buildtools, group:compiler, package:xrootd, package:python
features = tarball dumpenv cmake makemake
version = 5.34.09
depends = prepare:xrootd_install, prepare:python_install
source_url = ftp://root.cern.ch/{package}/{source_package}
source_package = {package}_v{version}.source.tar.gz
source_unpacked = {package}
unpacked_target = CMakeLists.txt
prepare_cmd_options =  -Dxrootd=ON -Dpython=ON
# fixme: ROOT does not unpack into a version-specific directory.  this
# WILL cause problems if the sampe build area is shared by multiple
# build types.
build_target = root
install_target = bin/root.exe
build_target = bin/root.exe
install_target = bin/root.exe

